// Inspired by http://codepen.io/davidicus/pen/vxIra

// Inline Block CSS Grid
// Nested grids need more testing

// Supports IE8 and above

// Insert your CSS reset of choice
// The grid works best using the body font-size 62.5% method

// Variables
$max-width: 600;
$columns: 12;
$w4: 400; // Responsive variable for changing grid widths to 100% - This can be any number

// General Grid Styling
// Grid Container
.grid-wrap {
    width:100%;
    max-width:$max-width + px;
    overflow:hidden;
    margin:auto;
    // Grid Rows
}
.grid-row {
    // This padding and left centers the grid in the wrapper
    padding:0 5px; 
    left:-5px;
    width:100%;
    position: relative;
}
// Nested Grid Rows
%grid-padding {
    padding: 0 0 0 10px;
}
%grid-padding-first {
    padding:0;
}
.grid-row .grid-row { 
    left:0;
    padding:0;
    // Nested Grid Items
    @for $i from 1 through $columns {
        .grid-#{$i} {
            @extend %grid-padding;
            &:first-child {
                @extend %grid-padding-first;
            }
        }
    }
}
// Grid Columns extend and loop
%grid {
    margin: auto -0.25em auto auto; // margin-right can be either px or em. Em size works best when using font-size:62.5% method
    display: inline-block;
    vertical-align: top;
    padding-left:10px;
}
@for $i from 1 through $columns {
    .grid-#{$i} {
        width: ($i / $columns) * 100%;
        @extend %grid;
    }
}
// Grid Inline inherits grid settings without a width
.grid-inline {
    @extend %grid;
}
// Push Columns moves columns left 
// (if one column is pushed then all following columns must be pushed too)
$pushColumns: $columns - 1;
%push {
    position: relative;
}
@for $i from 1 through $pushColumns {
    .push-#{$i} {
        @extend %push;
        left: ($i / $columns) * 100%;
    }
}
// Small Screen Media Query
@media only screen and (max-width: ($w4 - 1px)) {
    %small-push {
        left: 0;
    }
    %small-grid {
        width: 100%;
    }
    %small-grid-row {
        padding:0;
        margin-right:0;
    }
    @for $i from 1 through $pushColumns {
        .push-#{$i} {
            @extend %small-push;
        }
    }
    @for $i from 1 through $columns {
        .grid-#{$i} {
            @extend %small-grid;
        }
        .grid-row .grid-row { 
            .grid-#{$i} {
                @extend %small-grid-row;
            }
        }
    }
}
/*
HTML Structure

div.grid-wrap (The full container width)
    div.grid-row (The grid items container)
        div.grid-<num> (the grid item)
        div.grid-row (nested grid items container)
            div.grid-<num> (nested grid item)
*/